#include <iostream>
#include <vector>

void LsdRadixSort(std::vector<uint64_t>& arr) {
  const int kNUMBYTES = 8;

  size_t n = arr.size();

  for (int byte = 0; byte < kNUMBYTES; ++byte) {
    uint64_t count[256] = {0};
    std::vector<uint64_t> output(n);

    for (size_t i = 0; i < n; ++i) {
      unsigned char curr_byte = (arr[i] >> (byte * 8)) & 0xFF;
      ++count[curr_byte];
    }

    for (int i = 1; i < 256; ++i) {
      count[i] += count[i - 1];
    }

    for (int i = n - 1; i >= 0; --i) {
      unsigned char curr_byte = (arr[i] >> (byte * 8)) & 0xFF;
      output[--count[curr_byte]] = arr[i];
    }

    for (size_t i = 0; i < n; ++i) {
      arr[i] = output[i];
    }
  }
}

int main() {
  size_t n;

  std::cin >> n;

  std::vector<uint64_t> arr(n);

  for (size_t i = 0; i < n; ++i) {
    std::cin >> arr[i];
  }

  LsdRadixSort(arr);

  for (size_t i = 0; i < n; ++i) {
    std::cout << arr[i] << " "
              << "\n";
  }
  return 0;
}
